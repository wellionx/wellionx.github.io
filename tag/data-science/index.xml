<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data science | Wei Li|李伟</title>
    <link>/tag/data-science/</link>
      <atom:link href="/tag/data-science/index.xml" rel="self" type="application/rss+xml" />
    <description>Data science</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Wei Li ©2024 </copyright><lastBuildDate>Tue, 28 Sep 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu1ced7b333353f5a008e2ad419da4d284_46376_512x512_fill_lanczos_center_2.png</url>
      <title>Data science</title>
      <link>/tag/data-science/</link>
    </image>
    
    <item>
      <title>my first R package——ggwheat</title>
      <link>/post/my-first-r-package-ggwheat/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
      <guid>/post/my-first-r-package-ggwheat/</guid>
      <description>&lt;p&gt;关于这个R包，早期也写过一篇介绍的文章，推送在小麦研究联盟的公众号上（&lt;a href=&#34;https://mp.weixin.qq.com/s/N8dmPifnM_0Xhpcjcjmn_A&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;一千零一技 | 我用R画了一株小麦&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;当时仅仅是在我的电脑上实现了一个小麦植株器官的可视化功能。后来，有很多人对这个功能感兴趣。于是将这个功能写成R包的计划就提上日程。&lt;/p&gt;
&lt;p&gt;在介绍这个R包的功能之前，先简单回顾一下整个创作工程。&lt;/p&gt;
&lt;p&gt;我将其分为3个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;素材准备与制作&lt;/li&gt;
&lt;li&gt;数据融合与功能优化&lt;/li&gt;
&lt;li&gt;R包开发&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面将逐一介绍各个步骤&lt;/p&gt;
&lt;h3 id=&#34;1-素材准备与制作&#34;&gt;1. 素材准备与制作&lt;/h3&gt;
&lt;p&gt;这个步骤应该是最难的，我觉得。&lt;/p&gt;
&lt;p&gt;最初有这个想法，是和本实验室的一本博士生讨论的时候萌生的。当时我们都觉的有必要用一种更简单和直观的方式展示数据。然而苦于没有合适的素材和展示方式，当时就将此事搁浅了。&lt;/p&gt;
&lt;p&gt;后来，一次偶然的机会。在搜集素材时找到一个小麦植株的矢量图。当时的素材时这个样子。
&lt;img src=&#34;src_selected.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;看到这张图的时候，我们一致认为，这就是要找的素材。&lt;/p&gt;
&lt;p&gt;找到素材之后，接下来就该考虑怎么使用了。&lt;/p&gt;
&lt;p&gt;我们的想法很简单，找一株最具有代表性的小麦植株，用来展示小麦各器官的。相对来说比较完整的，应该是开花到灌浆期间。这个期间整个植株的发育已经完成，而且穗也比较完全。所以最终选择了灌浆期的这株小麦素材。&lt;/p&gt;
&lt;p&gt;选好以后，我们就将素材直接放到PPT中做了试验。由于素材各器官是分开的，在PPT中作为形状独立存在。因此，不同器官的化学成分含量可以用该器官形状的颜色的展示。初步的效果如下图。
&lt;img src=&#34;wheat_plant_ver1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然而，当我们耗时一个多小时将上面的图画完的时候，我们觉得如果小麦植株绘图如果以后要这样用的话，就太麻烦了。每次都需要手动注入数据信息，而且这个过程全凭感觉。&lt;/p&gt;
&lt;p&gt;这个时候，我想到了R。作为一款专业绘图的统计软件，R在可视化方面有着十分强大的功能。&lt;/p&gt;
&lt;p&gt;我们案例中，展示植株的形状，和地图的多边形有诸多相似之处。R语言中恰好有一款展示地图数据的R包&lt;code&gt;sf&lt;/code&gt;。这个R包不仅有展示地图的功能，还能自己制作地图。而地图制作中的其中一个元素，多边形，正是和我们做的小麦植株轮廓相似。&lt;/p&gt;
&lt;p&gt;于是接下来转战到用R包&lt;code&gt;sf&lt;/code&gt;进行小麦植株器官可视化。&lt;/p&gt;
&lt;p&gt;首选需要根据素材，制作出来小麦植株各器官的多边形轮廓。这个步骤在公众号文章（&lt;a href=&#34;https://mp.weixin.qq.com/s/N8dmPifnM_0Xhpcjcjmn_A&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;一千零一技 | 我用R画了一株小麦&lt;/a&gt;）有详细介绍，在此不再赘述。
&lt;img src=&#34;plotwehatinR.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;将图形组合成完整的植株，就可以在R里面就行操作了。&lt;/p&gt;
&lt;h3 id=&#34;2-数据融合与基础功能开发&#34;&gt;2. 数据融合与基础功能开发&lt;/h3&gt;
&lt;p&gt;先来看下例子。这个例子中，使用随机数为小麦植株9中器官做了赋值。通过图中颜色可以明显辨别不同器官的数值差异。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &#39;ggplot2&#39; was built under R version 4.4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/my-first-r-package-ggwheat/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加数据标签功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然而，仅仅通过颜色的变化好像还不足以展示出器官间的不同。尤其是当某几个器官数据差异不大导致颜色无法分辨时。就有必要用具体的数据加以区分了。我们通过对每个器官添加标签的方式来实现。提前在器官上选取坐标作为标签在器官的位置。为了使显示的数值标签不遮挡，采用R包&lt;code&gt;ggrepel&lt;/code&gt;进行标签展示。具体结果如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/my-first-r-package-ggwheat/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加不同调色板&lt;/strong&gt;
最初做颜色展示的时候，只考虑用颜色变异大的色彩。spectral色板成为了首选。当时当成品出来的时候，发现并不是那么好看。于是又挑选了其他几种色板，可以根据需要自行选择。比如，我要展示的氮含量的数据。这个数据植株绿色相关，我希望颜色越绿，表示的氮含量越高。而又希望对比色略微有些差异。那我就可以用YlGn色板。也就是图中第四个展示的。
&lt;img src=&#34;/post/my-first-r-package-ggwheat/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;展示时间尺度的变化&lt;/strong&gt;
上面讲到的仅仅是单株小麦在器官之间的空间变化。而我们实际试验过程中不仅仅取一次样品。如果多次取样，如何展示其时间变化呢。&lt;/p&gt;
&lt;p&gt;ggplot中的分面功能很好的解决了这个问题。下面这张图就是展示时空变化的小麦植株氮浓度(同头图)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/my-first-r-package-ggwheat/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;1632&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;任意组合不同时间下的植株&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;展示开花期和成熟期的济麦22与农大399两个小麦品种，并且加上数值标签。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/my-first-r-package-ggwheat/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;960&#34; /&gt;
以上是品种济麦22&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/my-first-r-package-ggwheat/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;960&#34; /&gt;
以上是品种农大399&lt;/p&gt;
&lt;h3 id=&#34;3-开发r包&#34;&gt;3. 开发R包&lt;/h3&gt;
&lt;p&gt;有了以上的实施思想和实现过程，剩下的就是用R包开发的软件将这些函数打包。统计之都网站有一篇博客介绍了&lt;a href=&#34;https://cosx.org/2013/11/building-r-packages-easily&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R包的建立方法&lt;/a&gt;。另外，也有一些开发R包的工具，包括&lt;code&gt;pkgdown&lt;/code&gt;等。&lt;/p&gt;
&lt;p&gt;R包开发的过程就是将各种函数写入打包调试的过程。
&lt;img src=&#34;R_pkg_dev.jpg&#34; alt=&#34;&#34;&gt;
目前已经创建好R包开发的项目，接下来就根据前面实现的功能将其转换成函数写入到R包中。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>手把手教你安装R</title>
      <link>/post/get-your-hands-dirty-install-r-from-the-begining/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      <guid>/post/get-your-hands-dirty-install-r-from-the-begining/</guid>
      <description>&lt;p&gt;写在前面：在正式安装R之前需要做下准备工作，下载原生的R软件以及最好用的R操作界面Rstudio。&lt;/p&gt;
&lt;p&gt;链接地址：&lt;/p&gt;
&lt;p&gt;R &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rstudio &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/#download&#34;&gt;https://www.rstudio.com/products/rstudio/download/#download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新手在安装R时常常会犯一些错误，导致后期在使用和升级R时体验极为不佳。我这个安装教程是总结了多次安装实战经验之后写下的，希望对想学R但又无从下手的同学能有所帮助。
另外，安装过程详细的避坑指南，可以参考谢益辉写的&lt;a href=&#34;https://bookdown.org/yihui/r-ninja/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R语言忍者秘笈&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面进入正式的安装教程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装原生R (R-4.0.5-win.exe)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;安装时要注意一定一定一定要选择English版本&lt;/li&gt;
&lt;li&gt;安装目录去掉版本号(C:\Program Files\R)&lt;/li&gt;
&lt;li&gt;安装选项仅勾选Core files 和 64-bit files即可&lt;/li&gt;
&lt;li&gt;其他配置都按照默认即可&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;安装Rstudio (默认安装)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;千万注意顺序，安装原生R之后，再Rstudio&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;打开并配置Rstudio，包括字体大小和package的镜像（亲测兰州大学镜像好用）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;字体配置Tools/Global Options/Appearance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package镜像配置Tools/Global Options/Packages&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;用户目录的设置（参考R语言忍者秘籍），具体方式如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;normalizePath(&#39;~&#39;) # 查看用户目录
# 如果文件不存在，它会被自动创建
file.edit(&#39;~/.Renviron&#39;)
# 写入配置文件中，保存，重启R
R_LIBS_USER=&amp;quot;~/R/libs&amp;quot; # C盘C:\Users\Wei\Documents\R\libs
R_LIBS_USER=&amp;quot;D:/Rlibs&amp;quot; # 可以设置成自己喜欢的位置
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;之所以要单独设置一个lib path，是为了方便升级时迁移已经安装的R包。因为后期安装的R包都会优先存储到新配置的目录下。一方面更新R包的时候不需要重新安装，只需将Rlib目录下的R包文件拷贝出来即可；另一方面，附加R包与主程序包是分开的，极大的方便的包的管理。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;检测libPaths位置是否配置成功&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;.libPaths()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输入以上代码，如显示如下内容，表示配置成功。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[1] &amp;ldquo;D:/Rlibs&amp;rdquo;    &amp;ldquo;C:/Program Files/R/library&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;如不成功，则需重启电脑后查看是否配置生效。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推荐R图库，有相关的图和代码
&lt;a href=&#34;https://www.r-graph-gallery.com/index.html&#34;&gt;https://www.r-graph-gallery.com/index.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PCA analysis of reflectance spectra</title>
      <link>/post/pca-analysis-of-reflectance-spectra/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/post/pca-analysis-of-reflectance-spectra/</guid>
      <description>&lt;p&gt;对于光谱这种高维数据，常常需要通过降维发现其内部的规律。&lt;/p&gt;
&lt;p&gt;首先看下原始光谱。从中仅仅能看出不同波段的变异信息，很难挖掘到更多与样品类别相关的特征。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/pca-analysis-of-reflectance-spectra/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;于是采用PCA进行降维，观察不同样品的差异。从下面的图中，似乎可以看出样品有成簇分布的可能。但是PCA降维是无法将分类信息展示出来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/pca-analysis-of-reflectance-spectra/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;于是通过层次聚类，发现类别相关的特征。有意思的结果出来了。似乎能根据光谱特征将样品分为不同类别。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/pca-analysis-of-reflectance-spectra/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从直觉上看，4个类别似乎还是有可能的。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(dend)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/pca-analysis-of-reflectance-spectra/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;采用kmeans进行聚类，发现确实4个类别是比较好的。而且还能生成非常漂亮的聚类PCA。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Gap statistic plot
fviz_gap_stat(res.km$gap_stat)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/pca-analysis-of-reflectance-spectra/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fviz_cluster(res.km, geom = &amp;quot;point&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/pca-analysis-of-reflectance-spectra/index_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;至此，光谱降维外加聚类的完整分析流程就结束了。下面就是需要根据样品的生物学特征来做解释了。比如4个类别刚好是质地不同的类型，那么解释起来就更有说服力了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R packages for Data Science</title>
      <link>/post/2020-12-18-r-packages-for-data-science/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-12-18-r-packages-for-data-science/</guid>
      <description>&lt;h3 id=&#34;r-包网站&#34;&gt;R 包网站&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cowplot&lt;/code&gt;包，用于组合图形和图片&lt;/p&gt;
&lt;p&gt;链接在此：&lt;a href=&#34;https://wilkelab.org/cowplot/articles/introduction.html&#34;&gt;https://wilkelab.org/cowplot/articles/introduction.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ggpubr&lt;/code&gt;包，号称可以生成发表级别的图。简单易用，但是灵活性不足。数据探索可以考虑使用&lt;/p&gt;
&lt;p&gt;链接在此：&lt;a href=&#34;https://rpkgs.datanovia.com/ggpubr/index.html&#34;&gt;https://rpkgs.datanovia.com/ggpubr/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ggstatsplot&lt;/code&gt;包, 画出来的图既漂亮还带有统计参数。棒棒棒！！！
&lt;a href=&#34;https://indrajeetpatil.github.io/ggstatsplot/&#34;&gt;https://indrajeetpatil.github.io/ggstatsplot/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sf&lt;/code&gt;包, 画地图的包，兼容性好。做不规则多边形也很好。当年我用轮廓构建的小麦植株就是用这个包做成的。
&lt;a href=&#34;https://r-spatial.github.io/sf/index.html&#34;&gt;https://r-spatial.github.io/sf/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ggcor&lt;/code&gt;包，做相关性分析比较强大的包，简化了很多分析的门槛，输出相关性的矩阵也很方便。然而由于某些原因，作者删除了包。&lt;/p&gt;
&lt;p&gt;备份版本可以在gitee上找到：&lt;a href=&#34;https://gitee.com/wellionx/ggcor&#34;&gt;https://gitee.com/wellionx/ggcor&lt;/a&gt;
可以通过devtools安装使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;devtools::install_git(&amp;quot;https://gitee.com/wellionx/ggcor.git&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ggvis&lt;/code&gt;包，可以画出很漂亮图形的R包
&lt;a href=&#34;http://ggvis.rstudio.com/&#34;&gt;http://ggvis.rstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;endextend&lt;/code&gt;包，一个美化和拓展tree的包
&lt;a href=&#34;http://talgalili.github.io/dendextend/articles/dendextend.html&#34;&gt;http://talgalili.github.io/dendextend/articles/dendextend.html&lt;/a&gt;
做聚类分析，用于可视化的包，fviz_dend()函数在展示大型树的时候，加载过于漫长。于是搜索有没有更好的解决方法。终于找到了&lt;code&gt;dendextend&lt;/code&gt;这个包。而且竟然支持管道操作，真真对这个包一见钟情。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;echarts4r&lt;/code&gt;包，echarts 4的R版本，能画很多交互的图
&lt;a href=&#34;https://echarts4r.john-coene.com/articles/advanced.html&#34;&gt;https://echarts4r.john-coene.com/articles/advanced.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;&lt;code&gt;recharts&lt;/code&gt;包，echarts 2的R版本, 谢益辉开发。&lt;/del&gt;
&lt;del&gt;&lt;a href=&#34;http://madlogos.github.io/recharts/#-en&#34;&gt;http://madlogos.github.io/recharts/#-en&lt;/a&gt;&lt;/del&gt;
最近准备尝试用之前写过的recharts代码画一些图，才发现这个包可用了。原来谢大神早已弃坑，不再更新recharts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;echarter&lt;/code&gt;包，echarts 4的R版本, 最新开发。作者在开发版本的网页中也介绍了之前几个版本的echarts的R接口,都是挂在GitHub上的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cosname/recharts - ECharts4&lt;/li&gt;
&lt;li&gt;JohnCoene/echarts4r - ECharts4&lt;/li&gt;
&lt;li&gt;yihui/recharts - ECharts2&lt;/li&gt;
&lt;li&gt;madlogos/recharts - ECharts2 forked from yihui/recharts&lt;/li&gt;
&lt;li&gt;madlogos/recharts2 - ECharts3&lt;/li&gt;
&lt;li&gt;ChanningWong/REcharts3 - ECharts3&lt;/li&gt;
&lt;li&gt;XD-DENG/ECharts2Shiny - ECharts3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据科学&#34;&gt;数据科学&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;caret&lt;/code&gt;包的使用说明书，包含了很多数据科学的知识，值得深入研究&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&#34;https://topepo.github.io/caret/&#34;&gt;https://topepo.github.io/caret/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于模型评估的内容：&lt;a href=&#34;https://topepo.github.io/caret/measuring-performance.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Measuring Performance&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：
&lt;a href=&#34;https://www.yinxiang.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;印象笔记官网&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此外，还发现caret包能做&lt;a href=&#34;https://topepo.github.io/caret/recursive-feature-elimination.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Recursive Feature Elimination&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计学习即机器学习
&lt;a href=&#34;https://daviddalpiaz.github.io/r4sl/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R for Statistical Learning&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R可视化的网站。介绍了几个主流的R绘图包，并配有例子
&lt;a href=&#34;https://ecodatasci-tlv.github.io/visualizations_in_r/&#34;&gt;https://ecodatasci-tlv.github.io/visualizations_in_r/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关性分析可视化，一个比一个漂亮的图
&lt;a href=&#34;https://jamesmarquezportfolio.com/correlation_matrices_in_r.html&#34;&gt;https://jamesmarquezportfolio.com/correlation_matrices_in_r.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
